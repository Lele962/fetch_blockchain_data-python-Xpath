{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 1378,
            "contract": "Game01",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x60806040526040516020806109b683398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160028190555060013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050662386f26fc1000060038190555080600481905550506108bd806100f96000396000f3006080604052600436106100f0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062113e08146100f55780630ac67e2f14610120578063134f18931461014b57806314fbb64714610162578063182d326e1461018d578063197b0c99146101e45780631c75f0851461020f57806342cbb15c1461026657806343031e9b1461029157806357e871e7146102bc57806365225665146102e75780637a9216621461035457806381c648e21461037f578063a4033cfa14610389578063c10915cd146103bc578063d426b5d4146103e7578063f71d96cb1461043e575b600080fd5b34801561010157600080fd5b5061010a6104ab565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b506101356104ca565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b506101606104d4565b005b34801561016e57600080fd5b506101776104de565b6040518082815260200191505060405180910390f35b34801561019957600080fd5b506101a26104e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f057600080fd5b506101f961050d565b6040518082815260200191505060405180910390f35b34801561021b57600080fd5b50610224610513565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027257600080fd5b5061027b610538565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a6610542565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102d161054c565b6040518082815260200191505060405180910390f35b3480156102f357600080fd5b5061031260048036038101908080359060200190929190505050610552565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036057600080fd5b50610369610595565b6040518082815260200191505060405180910390f35b61038761059b565b005b34801561039557600080fd5b5061039e610645565b60405180826000191660001916815260200191505060405180910390f35b3480156103c857600080fd5b506103d161064b565b6040518082815260200191505060405180910390f35b3480156103f357600080fd5b506103fc610651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044a57600080fd5b5061046960048036038101908080359060200190929190505050610677565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600354905090565b6104dc6106b5565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600454905090565b6000600254905090565b60045481565b600060018281548110151561056357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60065481565b60035434101515156105ac57600080fd5b60045440600581600019169055506005546001900460068190555060006006541415156105d857600080fd5b60013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600281905550565b60055481565b60035481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018181548110151561068657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004544060058160001916905550600554600190046006819055506000600654141515156106e557600080fd5b6002546006548115156106f457fe5b06600781905550600160075481548110151561070c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60643073ffffffffffffffffffffffffffffffffffffffff163181151561079c57fe5b040291506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610807573d6000803e3d6000fd5b50813073ffffffffffffffffffffffffffffffffffffffff1631039050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561088c573d6000803e3d6000fd5b5050505600a165627a7a72305820ccf54891d96d853dc8e202c275d82b779dee3be028336249e3ed294e97cceb980029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x6522566580",
                        "input": "0x6522566580",
                        "name": "getPlayerAddress(uint256)",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": [
                            57896044618658097711785492504343953926634992332820282019728792003956564819968
                        ],
                        "value": "0x0"
                    }
                ]
            },
            "filename": "output/0xd20ae1b3c922b4e8ae9eb6e3f4302e71b8c12970.sol",
            "function": "getPlayerAddress(uint256)",
            "line": 77,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        },
        {
            "address": 1669,
            "contract": "Game01",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x8",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x60806040526040516020806109b683398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160028190555060013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050662386f26fc1000060038190555080600481905550506108bd806100f96000396000f3006080604052600436106100f0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062113e08146100f55780630ac67e2f14610120578063134f18931461014b57806314fbb64714610162578063182d326e1461018d578063197b0c99146101e45780631c75f0851461020f57806342cbb15c1461026657806343031e9b1461029157806357e871e7146102bc57806365225665146102e75780637a9216621461035457806381c648e21461037f578063a4033cfa14610389578063c10915cd146103bc578063d426b5d4146103e7578063f71d96cb1461043e575b600080fd5b34801561010157600080fd5b5061010a6104ab565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b506101356104ca565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b506101606104d4565b005b34801561016e57600080fd5b506101776104de565b6040518082815260200191505060405180910390f35b34801561019957600080fd5b506101a26104e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f057600080fd5b506101f961050d565b6040518082815260200191505060405180910390f35b34801561021b57600080fd5b50610224610513565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027257600080fd5b5061027b610538565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a6610542565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102d161054c565b6040518082815260200191505060405180910390f35b3480156102f357600080fd5b5061031260048036038101908080359060200190929190505050610552565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036057600080fd5b50610369610595565b6040518082815260200191505060405180910390f35b61038761059b565b005b34801561039557600080fd5b5061039e610645565b60405180826000191660001916815260200191505060405180910390f35b3480156103c857600080fd5b506103d161064b565b6040518082815260200191505060405180910390f35b3480156103f357600080fd5b506103fc610651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044a57600080fd5b5061046960048036038101908080359060200190929190505050610677565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600354905090565b6104dc6106b5565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600454905090565b6000600254905090565b60045481565b600060018281548110151561056357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60065481565b60035434101515156105ac57600080fd5b60045440600581600019169055506005546001900460068190555060006006541415156105d857600080fd5b60013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600281905550565b60055481565b60035481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018181548110151561068657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004544060058160001916905550600554600190046006819055506000600654141515156106e557600080fd5b6002546006548115156106f457fe5b06600781905550600160075481548110151561070c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60643073ffffffffffffffffffffffffffffffffffffffff163181151561079c57fe5b040291506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610807573d6000803e3d6000fd5b50813073ffffffffffffffffffffffffffffffffffffffff1631039050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561088c573d6000803e3d6000fd5b5050505600a165627a7a72305820ccf54891d96d853dc8e202c275d82b779dee3be028336249e3ed294e97cceb980029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xf71d96cb80",
                        "input": "0xf71d96cb80",
                        "name": "players(uint256)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": [
                            57896044618658097711785492504343953926634992332820282019728792003956564819968
                        ],
                        "value": "0x0"
                    }
                ]
            },
            "filename": "output/0xd20ae1b3c922b4e8ae9eb6e3f4302e71b8c12970.sol",
            "function": "players(uint256)",
            "line": 6,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        },
        {
            "address": 2166,
            "contract": "Game01",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x60806040526040516020806109b683398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160028190555060013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050662386f26fc1000060038190555080600481905550506108bd806100f96000396000f3006080604052600436106100f0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062113e08146100f55780630ac67e2f14610120578063134f18931461014b57806314fbb64714610162578063182d326e1461018d578063197b0c99146101e45780631c75f0851461020f57806342cbb15c1461026657806343031e9b1461029157806357e871e7146102bc57806365225665146102e75780637a9216621461035457806381c648e21461037f578063a4033cfa14610389578063c10915cd146103bc578063d426b5d4146103e7578063f71d96cb1461043e575b600080fd5b34801561010157600080fd5b5061010a6104ab565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b506101356104ca565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b506101606104d4565b005b34801561016e57600080fd5b506101776104de565b6040518082815260200191505060405180910390f35b34801561019957600080fd5b506101a26104e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f057600080fd5b506101f961050d565b6040518082815260200191505060405180910390f35b34801561021b57600080fd5b50610224610513565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027257600080fd5b5061027b610538565b6040518082815260200191505060405180910390f35b34801561029d57600080fd5b506102a6610542565b6040518082815260200191505060405180910390f35b3480156102c857600080fd5b506102d161054c565b6040518082815260200191505060405180910390f35b3480156102f357600080fd5b5061031260048036038101908080359060200190929190505050610552565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036057600080fd5b50610369610595565b6040518082815260200191505060405180910390f35b61038761059b565b005b34801561039557600080fd5b5061039e610645565b60405180826000191660001916815260200191505060405180910390f35b3480156103c857600080fd5b506103d161064b565b6040518082815260200191505060405180910390f35b3480156103f357600080fd5b506103fc610651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044a57600080fd5b5061046960048036038101908080359060200190929190505050610677565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600354905090565b6104dc6106b5565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600454905090565b6000600254905090565b60045481565b600060018281548110151561056357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60065481565b60035434101515156105ac57600080fd5b60045440600581600019169055506005546001900460068190555060006006541415156105d857600080fd5b60013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600281905550565b60055481565b60035481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018181548110151561068657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004544060058160001916905550600554600190046006819055506000600654141515156106e557600080fd5b6002546006548115156106f457fe5b06600781905550600160075481548110151561070c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60643073ffffffffffffffffffffffffffffffffffffffff163181151561079c57fe5b040291506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610807573d6000803e3d6000fd5b50813073ffffffffffffffffffffffffffffffffffffffff1631039050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561088c573d6000803e3d6000fd5b5050505600a165627a7a72305820ccf54891d96d853dc8e202c275d82b779dee3be028336249e3ed294e97cceb980029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x134f1893",
                        "input": "0x134f1893",
                        "name": "goWiner()",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "output/0xd20ae1b3c922b4e8ae9eb6e3f4302e71b8c12970.sol",
            "function": "goWiner()",
            "line": 40,
            "message": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).\nClassification: SWC-113",
            "name": "Multiple Calls in a Single Transaction (SWC 113)",
            "severity": "Low"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
