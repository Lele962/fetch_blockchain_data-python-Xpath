{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 1888,
            "contract": "PresaleToken",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "input": "0x608060405260008060006101000a81548160ff0219169083600481111561002257fe5b0217905550600060015534801561003857600080fd5b50604051604080610f9a833981018060405281019080805190602001909291908051906020019092919050505081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610ea2806100f86000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063055ad42e146100f157806306fdde031461012a57806318160ddd146101ba5780631ca2e94a146101e5578063292005a2146102155780632a709b1414610240578063313ce56714610297578063341176d6146102c25780634defd1bf1461031957806370a082311461035c5780637362377b146103b35780638d859f3e146103ca57806395d89b41146103f5578063b237f7d414610485578063e2fdcc17146104c8578063ec8ac4d81461051f575b6100ef33610555565b005b3480156100fd57600080fd5b5061010661066a565b6040518082600481111561011657fe5b60ff16815260200191505060405180910390f35b34801561013657600080fd5b5061013f61067c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017f578082015181840152602081019050610164565b50505050905090810190601f1680156101ac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c657600080fd5b506101cf6106b5565b6040518082815260200191505060405180910390f35b3480156101f157600080fd5b50610213600480360381019080803560ff1690602001909291905050506106bb565b005b34801561022157600080fd5b5061022a6109a1565b6040518082815260200191505060405180910390f35b34801561024c57600080fd5b506102556109b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102a357600080fd5b506102ac6109d6565b6040518082815260200191505060405180910390f35b3480156102ce57600080fd5b506102d76109db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032557600080fd5b5061035a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a01565b005b34801561036857600080fd5b5061039d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad3565b6040518082815260200191505060405180910390f35b3480156103bf57600080fd5b506103c8610b1c565b005b3480156103d657600080fd5b506103df610c14565b6040518082815260200191505060405180910390f35b34801561040157600080fd5b5061040a610c1a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561044a57808201518184015260208101905061042f565b50505050905090810190601f1680156104775780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561049157600080fd5b506104c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c53565b005b3480156104d457600080fd5b506104dd610e50565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610553600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610555565b005b60006001600481111561056457fe5b6000809054906101000a900460ff16600481111561057e57fe5b14151561058a57600080fd5b600034141561059857600080fd5b61025e340290506a050341421d87f1f3800000816001540111156105bb57600080fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff167f4f79409f494e81c38036d80aa8a6507c2cb08d90bfb2fead5519447646b3497e826040518082815260200191505060405180910390a25050565b6000809054906101000a900460ff1681565b6040805190810160405280601281526020017f534f4e4d2050726573616c6520546f6b656e000000000000000000000000000081525081565b60015481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561071957600080fd5b6000600481111561072657fe5b6000809054906101000a900460ff16600481111561074057fe5b14801561076357506001600481111561075557fe5b82600481111561076157fe5b145b806107b457506001600481111561077657fe5b6000809054906101000a900460ff16600481111561079057fe5b1480156107b35750600260048111156107a557fe5b8260048111156107b157fe5b145b5b806108795750600160048111156107c757fe5b6000809054906101000a900460ff1660048111156107e157fe5b14806108115750600260048111156107f557fe5b6000809054906101000a900460ff16600481111561080f57fe5b145b801561083357506003600481111561082557fe5b82600481111561083157fe5b145b801561087857506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b5b806108ca57506002600481111561088c57fe5b6000809054906101000a900460ff1660048111156108a657fe5b1480156108c95750600160048111156108bb57fe5b8260048111156108c757fe5b145b5b806109285750600360048111156108dd57fe5b6000809054906101000a900460ff1660048111156108f757fe5b148015610919575060048081111561090b57fe5b82600481111561091757fe5b145b801561092757506000600154145b5b905080151561093657600080fd5b816000806101000a81548160ff0219169083600481111561095357fe5b02179055507f8d9efa3fab1bd6476defa44f520afbf9337886a4947021fd7f2775e0efaf4571826040518082600481111561098a57fe5b60ff16815260200191505060405180910390a15050565b6a050341421d87f1f380000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601281565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a5d57600080fd5b60036004811115610a6a57fe5b6000809054906101000a900460ff166004811115610a8457fe5b1415610a8f57600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b7857600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff16311115610c1257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501515610c1157600080fd5b5b565b61025e81565b6040805190810160405280600381526020017f535054000000000000000000000000000000000000000000000000000000000081525081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cb157600080fd5b60036004811115610cbe57fe5b6000809054906101000a900460ff166004811115610cd857fe5b141515610ce457600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415610d3457600080fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff167f38d762ef507761291a578e921acfe29c1af31a7331ea03e391cf16cfc4d4f581826040518082815260200191505060405180910390a260006001541415610e4c5760046000806101000a81548160ff02191690836004811115610e0057fe5b02179055507f8d9efa3fab1bd6476defa44f520afbf9337886a4947021fd7f2775e0efaf4571600460405180826004811115610e3857fe5b60ff16815260200191505060405180910390a15b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820f090555073ac10e6cc924abba2a12e61f8908574ae023ff8dba0098b406d604d0029efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x1ca2e94a0000000000000000000000000000000000000000000000000000000000018085",
                        "input": "0x1ca2e94a0000000000000000000000000000000000000000000000000000000000018085",
                        "name": "setPresalePhase(uint8)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "output/0xc8e3aa7718cf72f927b845d834be0b93c66b34e1.sol",
            "function": "setPresalePhase(uint8)",
            "line": 136,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
