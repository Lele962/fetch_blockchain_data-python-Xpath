INFO:Slither:Compilation warnings/errors on /sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:78:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransfer = keccak256(
                                                     ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:88:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransferFrom = keccak256(
                                                         ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:99:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApprove = keccak256(
                                                    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:109:60: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApproveAndCall = keccak256(
                                                           ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:204:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    keccak256(
                    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:219:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "32", data), v, r, s) // Geth-adopted
                                    ^-------------------------------------------^
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:221:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x20", data), v, r, s) // Trezor-adopted
                                    ^---------------------------------------------^
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:225:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "64", hexToString(data)), v, r, s) // Geth
                                    ^--------------------------------------------------------^
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:227:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x40", hexToString(data)), v, r, s) // Trezor
                                    ^----------------------------------------------------------^
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:286:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:334:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, fee, feeRecipient, deadline, sigId),
            ^--------------------------------------------------------------------------------^
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:383:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol:432:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, extraData, fee, feeRecipient, deadline, sigId),
            ^-------------------------------------------------------------------------------------------^

INFO:Detectors:[93m
ZeroGravityToken.rescueLostTokens (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#503-507) does not use the value returned by external calls:
	-tokenContract.transfer(rescueAccount,value) (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#504-506)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in ZeroGravityToken.approveAndCallViaSignature (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#432-445):
	External calls:
	- tokenRecipient(spender).receiveApproval(from,value,this,extraData) (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#444-445)
	State variables written after the call(s):
	- balanceOf (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#445)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ZeroGravityToken.requireSignature (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#188-238) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp <= deadline && ! usedSigIds[signer][sigId]) (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#201-203)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
ZeroGravityToken.requireSignature uses assembly (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#188-238)
	- /sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#195-201
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ZeroGravityToken.decimals should be constant (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#60)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ZeroGravityToken.transfer (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#257-260) should be declared external
ZeroGravityToken.transferFrom (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#357-359) should be declared external
ZeroGravityToken.approveAndCall (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#407-409) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#3-7) is not in CapWords
Constant 'ZeroGravityToken.ethSignedMessagePrefix' (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#77-79) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ZeroGravityToken.sigDestinationTransfer' (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#79-87) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ZeroGravityToken.sigDestinationTransferFrom' (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#89-98) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ZeroGravityToken.sigDestinationApprove' (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#100-109) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ZeroGravityToken.sigDestinationApproveAndCall' (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#111-121) is not in UPPER_CASE_WITH_UNDERSCORES
Enum 'ZeroGravityToken.sigStandard' (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#75) is not in CapWords
Enum 'ZeroGravityToken.sigDestination' (/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol#77) is not in CapWords
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xd7dbe6f13b002ebed312f7ffb6164475426bdd96.sol analyzed (4 contracts), 16 result(s) found
