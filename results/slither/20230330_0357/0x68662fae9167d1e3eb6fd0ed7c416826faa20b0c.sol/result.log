INFO:Slither:Compilation warnings/errors on /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:8:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function mortal() { owner = msg.sender; }
    ^---------------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:17:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:22:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:49:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:64:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:65:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:91:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:92:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:93:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:103:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:119:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MyAdvancedToken() token (1000000000, "Welfare Token Fund", 3, "WTF") {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:126:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:127:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:128:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:137:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:138:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:139:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:140:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:167:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:174:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:178:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:68:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:97:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:131:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:144:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:151:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:152:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:157:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:170:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                // execute an event reflecting the change
        ^--------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:180:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);            // executes an event reflecting on the change
            ^--------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:8:5: Warning: No visibility specified. Defaulting to "public". 
    function mortal() { owner = msg.sender; }
    ^---------------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function kill() { if (msg.sender == owner) selfdestruct(owner); }
    ^---------------------------------------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:17:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:26:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:31:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:49:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:72:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:75:9: Warning: Unused local variable.
        tokenRecipient spender = tokenRecipient(_spender);
        ^--------------------^
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:80:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:90:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:102:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:119:5: Warning: No visibility specified. Defaulting to "public". 
    function MyAdvancedToken() token (1000000000, "Welfare Token Fund", 3, "WTF") {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:125:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:136:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:148:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:160:5: Warning: No visibility specified. Defaulting to "public". 
    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:165:5: Warning: No visibility specified. Defaulting to "public". 
    function buy() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:173:5: Warning: No visibility specified. Defaulting to "public". 
    function sell(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
MyAdvancedToken.totalSupply (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#115) shadows:
	- token.totalSupply (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#41)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
token (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#34-110) has incorrect ERC20 function interface(s):
	-transfer (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#64-71)
MyAdvancedToken (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#110-183) has incorrect ERC20 function interface(s):
	-transfer (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#126-136)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
token.standard should be constant (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#35-37)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#24-26:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#65:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#92:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#94:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#129:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#129-130:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#139-140:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#141:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#142:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#169:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#176:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#180:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
mortal.kill (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#11-14) should be declared external
owned.transferOwnership (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#26-31) should be declared external
tokenRecipient.receiveApproval (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#31-34) should be declared external
MyAdvancedToken.transfer (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#126-136) should be declared external
token.transfer (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#64-71) should be declared external
token.approveAndCall (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#81-90) should be declared external
MyAdvancedToken.transferFrom (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#137-150) should be declared external
token.transferFrom (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#90-102) should be declared external
token.fallback (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#107-110) should be declared external
MyAdvancedToken.mintToken (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#150-158) should be declared external
MyAdvancedToken.freezeAccount (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#160-165) should be declared external
MyAdvancedToken.setPrices (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#165-167) should be declared external
MyAdvancedToken.buy (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#167-175) should be declared external
MyAdvancedToken.sell (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#175-183) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol:
	- pragma solidity^0.4.2 (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'mortal' (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#3-14) is not in CapWords
Contract 'owned' (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#14-31) is not in CapWords
Contract 'tokenRecipient' (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#31-34) is not in CapWords
Contract 'token' (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#34-110) is not in CapWords
Parameter '_to' of token.transfer (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#64) is not in mixedCase
Parameter '_value' of token.transfer (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#64) is not in mixedCase
Parameter '_spender' of token.approve (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#74) is not in mixedCase
Parameter '_value' of token.approve (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#74) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#81-82) is not in mixedCase
Parameter '_value' of token.approveAndCall (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#82) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#82) is not in mixedCase
Parameter '_from' of token.transferFrom (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#91) is not in mixedCase
Parameter '_to' of token.transferFrom (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#91) is not in mixedCase
Parameter '_value' of token.transferFrom (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#91) is not in mixedCase
Parameter '_to' of MyAdvancedToken.transfer (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#126-127) is not in mixedCase
Parameter '_value' of MyAdvancedToken.transfer (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#127) is not in mixedCase
Parameter '_from' of MyAdvancedToken.transferFrom (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#137) is not in mixedCase
Parameter '_to' of MyAdvancedToken.transferFrom (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#137) is not in mixedCase
Parameter '_value' of MyAdvancedToken.transferFrom (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#137-138) is not in mixedCase
Function 'MyAdvancedToken.MyAdvancedToken' (/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol#120-126) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c.sol analyzed (5 contracts), 56 result(s) found
