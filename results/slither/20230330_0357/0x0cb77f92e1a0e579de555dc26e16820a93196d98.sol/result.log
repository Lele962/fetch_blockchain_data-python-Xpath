INFO:Slither:Compilation warnings/errors on /sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:76:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CCCTESTToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:116:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _spender, _value);
		^------------------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:136:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _spender, allowance[msg.sender][_spender]);
		^-------------------------------------------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:156:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _spender, allowance[msg.sender][_spender]);
		^-------------------------------------------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:180:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:200:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:209:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:218:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:248:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance > 0);
                ^----------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:249:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(owner.send(this.balance));
                           ^----------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        IssueToken(msg.sender, tokens); 
        ^----------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:33:6: Warning: No visibility specified. Defaulting to "public". 
     function balanceOf(address _owner) constant returns (uint256  balance);
     ^---------------------------------------------------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:34:6: Warning: No visibility specified. Defaulting to "public". 
     function transfer(address _to, uint256  _value) returns (bool success);
     ^---------------------------------------------------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:35:6: Warning: No visibility specified. Defaulting to "public". 
     function transferFrom(address _from, address _to, uint256  _value) returns (bool success);
     ^----------------------------------------------------------------------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:36:6: Warning: No visibility specified. Defaulting to "public". 
     function approve(address _spender, uint256  _value) returns (bool success);
     ^-------------------------------------------------------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:37:6: Warning: No visibility specified. Defaulting to "public". 
     function allowance(address _owner, address _spender) constant returns (uint256 remaining);
     ^----------------------------------------------------------------------------------------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:76:5: Warning: No visibility specified. Defaulting to "public". 
    function CCCTESTToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:108:2: Warning: No visibility specified. Defaulting to "public". 
	function balanceOf(address _owner) constant returns (uint256 balance) {
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:113:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) validAddress unlocked returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:121:2: Warning: No visibility specified. Defaulting to "public". 
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:161:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) validAddress unlocked returns (bool success) {	
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:161:83: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transfer(address _to, uint256 _value) validAddress unlocked returns (bool success) {	
                                                                                  ^----------^
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:186:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) validAddress unlocked returns (bool success) {	
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:194:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) validAddress unlocked returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:204:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) validAddress unlocked returns (bool success) {	
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:213:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) validAddress unlocked returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:228:5: Warning: No visibility specified. Defaulting to "public". 
    function setName(string _name) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:232:5: Warning: No visibility specified. Defaulting to "public". 
    function setSymbol(string _symbol) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:253:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:7:3: Warning: Function state mutability can be restricted to pure
  function safeMult(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:13:3: Warning: Function state mutability can be restricted to pure
  function safeDiv(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:20:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:25:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:104:5: Warning: Function state mutability can be restricted to view
    function formatDecimals(uint256 _value) internal returns (uint256 ) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
CCCTESTToken.decimals should be constant (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#46-47)
CCCTESTToken.version should be constant (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#50-51)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
CCCTESTToken.balanceOf (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#110-113) should be declared external
TokenERC20.balanceOf (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#33-34) should be declared external
CCCTESTToken.transfer (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#166-169) should be declared external
TokenERC20.transfer (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#34-35) should be declared external
CCCTESTToken.transferFrom (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#187-196) should be declared external
TokenERC20.transferFrom (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#35-36) should be declared external
CCCTESTToken.approve (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#114-121) should be declared external
TokenERC20.approve (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#36-37) should be declared external
TokenERC20.allowance (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#37-38) should be declared external
CCCTESTToken.allowance (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#122-127) should be declared external
CCCTESTToken.increaseApproval (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#135-142) should be declared external
CCCTESTToken.decreaseApproval (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#150-162) should be declared external
CCCTESTToken.burn (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#196-206) should be declared external
CCCTESTToken.freeze (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#206-215) should be declared external
CCCTESTToken.unfreeze (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#216-225) should be declared external
CCCTESTToken.setName (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#238-239) should be declared external
CCCTESTToken.setSymbol (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#239-241) should be declared external
CCCTESTToken.setLock (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#248-254) should be declared external
CCCTESTToken.withdrawEther (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#261-265) should be declared external
CCCTESTToken.fallback (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#268-273) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol:
	- pragma solidity^0.4.18 (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of CCCTESTToken.balanceOf (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#112) is not in mixedCase
Parameter '_to' of CCCTESTToken.transfer (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#166) is not in mixedCase
Parameter '_value' of CCCTESTToken.transfer (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#166) is not in mixedCase
Parameter '_from' of CCCTESTToken.transferFrom (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#188) is not in mixedCase
Parameter '_to' of CCCTESTToken.transferFrom (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#188-189) is not in mixedCase
Parameter '_value' of CCCTESTToken.transferFrom (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#189) is not in mixedCase
Parameter '_spender' of CCCTESTToken.approve (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#115) is not in mixedCase
Parameter '_value' of CCCTESTToken.approve (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#115) is not in mixedCase
Parameter '_owner' of CCCTESTToken.allowance (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#125-126) is not in mixedCase
Parameter '_spender' of CCCTESTToken.allowance (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#126) is not in mixedCase
Function 'CCCTESTToken.CCCTESTToken' (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#78-94) is not in mixedCase
Parameter '_value' of CCCTESTToken.formatDecimals (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#108) is not in mixedCase
Parameter '_spender' of CCCTESTToken.increaseApproval (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#135) is not in mixedCase
Parameter '_addedValue' of CCCTESTToken.increaseApproval (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#135) is not in mixedCase
Parameter '_spender' of CCCTESTToken.decreaseApproval (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#150-151) is not in mixedCase
Parameter '_subtractedValue' of CCCTESTToken.decreaseApproval (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#151) is not in mixedCase
Function 'CCCTESTToken._transfer' (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#170-187) is not in mixedCase
Parameter '_from' of CCCTESTToken._transfer (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#171-172) is not in mixedCase
Parameter '_to' of CCCTESTToken._transfer (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#172) is not in mixedCase
Parameter '_value' of CCCTESTToken._transfer (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#172) is not in mixedCase
Parameter '_value' of CCCTESTToken.burn (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#197) is not in mixedCase
Parameter '_value' of CCCTESTToken.freeze (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#207) is not in mixedCase
Parameter '_value' of CCCTESTToken.unfreeze (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#216) is not in mixedCase
Parameter '_tokenExchangeRate' of CCCTESTToken.setTokenExchangeRate (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#228) is not in mixedCase
Parameter '_name' of CCCTESTToken.setName (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#238-239) is not in mixedCase
Parameter '_symbol' of CCCTESTToken.setSymbol (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#241) is not in mixedCase
Parameter '_newLockState' of CCCTESTToken.setLock (/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol#248-249) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x0cb77f92e1a0e579de555dc26e16820a93196d98.sol analyzed (3 contracts), 49 result(s) found
